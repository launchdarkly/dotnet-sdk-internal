
namespace LaunchDarkly.Sdk.Internal.Events
{
    /// <summary>
    /// Common interface for the subset of feature flag properties that are required for the event logic
    /// (since the details of the feature flag model are different between server-side and mobile).
    /// </summary>
    public interface IFlagEventProperties
    {
        /// <summary>
        /// The flag key.
        /// </summary>
        string Key { get; }

        /// <summary>
        /// The version number that should be included in events for this flag. For server-side SDKs, this
        /// is just the flag's version property. For client-side SDKs, it is the flagVersion property if
        /// that property exists, otherwise the version property.
        /// </summary>
        int EventVersion { get; }

        /// <summary>
        /// True if full-fidelity event tracking is enabled for this flag.
        /// </summary>
        bool TrackEvents { get; }

        /// <summary>
        /// Non-null if full-fidelity event debugging is enabled until the specified time.
        /// </summary>
        UnixMillisecondTime? DebugEventsUntilDate { get; }

        /// <summary>
        /// Determines whether a particular kind of result generated by this flag should be considered part
        /// of an experiment. In this context, an experiment means that the corresponding event should get
        /// full detail and include the reason, even if it normally would not.
        /// 
        /// In the server-side SDK, this decision is based on both the flag and the evaluation reason. In
        /// the client-side SDK, it has already been decided for us when LaunchDarkly evaluated the flag.
        /// </summary>
        /// <param name="reason">the evaluation reason for the result, if available</param>
        /// <returns>true if experiment mode should be used for this combination of flag and reason</returns>
        bool IsExperiment(EvaluationReason? reason);
    }
}
